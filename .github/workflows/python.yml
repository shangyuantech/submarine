# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: python-sdk

# Trigger the workflow on push or pull request
on: [push, pull_request]

env:
  KUBERNETES_VERSION: "v1.21.2"

jobs:
  check-style:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          pip install --upgrade pip  
          pip install -r ./dev-support/style-check/python/lint-requirements.txt
          pip install -r ./dev-support/style-check/python/mypy-requirements.txt
      - name: Check python sdk code style
        run: ./dev-support/style-check/python/lint.sh

  unit:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: [3.6, 3.7]
        tf-version: [1.15.0, 2.6.0]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install requirements
        run: |
          pip install --upgrade pip  
          pip install -r ./submarine-sdk/pysubmarine/github-actions/test-requirements.txt
      - name: Install pysubmarine with tf1 and pytorch
        if: matrix.tf-version == '1.15.0'
        run: pip install --no-cache-dir -e ./submarine-sdk/pysubmarine/.[tf,pytorch]
      - name: Install pysubmarine with tf2 and pytorch
        if: matrix.tf-version == '2.6.0'
        run: pip install --no-cache-dir -e ./submarine-sdk/pysubmarine/.[tf2,pytorch]
      - name: Run unit test
        run: pytest --cov=submarine -vs -m "not e2e"

  integration:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - name: Check version
        run: |
          mvn --version
          java -version
      - name: Create kind cluster
        run: kind create cluster --config ./.github/config/kind-config-kind.yaml --wait 3m --image kindest/node:${KUBERNETES_VERSION}
      - name: Show K8s cluster information
        run: |
          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      # Cache maven (for submarine server)
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build Image locally
        run: .github/scripts/build-image-locally.sh
      - name: Start submarine
        run: bash ./.github/scripts/start-submarine.sh
      - name: Setup python environment
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install --no-cache-dir -e ./submarine-sdk/pysubmarine/.[tf,pytorch]
          pip install --no-cache-dir tensorflow-addons
          pip install --no-cache-dir tf_slim
          pip install -r ./submarine-sdk/pysubmarine/github-actions/test-requirements.txt
      - name: Run integration test
        working-directory: ./submarine-sdk/pysubmarine
        run: pytest --cov=submarine -vs -m "e2e"
      - name: Failure status
        run: |
          kubectl describe nodes
          kubectl get pods
          kubectl -n default get events --sort-by='{.lastTimestamp}'
        if: ${{ failure() }}
