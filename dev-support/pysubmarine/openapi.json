{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Submarine API",
    "description" : "The Submarine REST API allows you to access Submarine resources such as, \nexperiments, environments and notebooks. The \nAPI is hosted under the /v1 path on the Submarine server. For example, \nto list experiments on a server hosted at http://localhost:8080, access\nhttp://localhost:8080/api/v1/experiment/",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "dev@submarine.apache.org"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version" : "0.8.0-SNAPSHOT"
  },
  "servers" : [ {
    "url" : "/api"
  } ],
  "paths" : {
    "/v1/environment/{id}" : {
      "get" : {
        "tags" : [ "environment" ],
        "summary" : "Find environment by name",
        "operationId" : "getEnvironment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Environment not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "environment" ],
        "summary" : "Delete the environment",
        "operationId" : "deleteEnvironment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Environment not found"
          }
        }
      },
      "patch" : {
        "tags" : [ "environment" ],
        "summary" : "Update the environment with job spec",
        "operationId" : "updateEnvironment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Environment not found"
          }
        }
      }
    },
    "/v1/environment" : {
      "get" : {
        "tags" : [ "environment" ],
        "summary" : "List of Environments",
        "operationId" : "listEnvironment",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "environment" ],
        "summary" : "Create a environment",
        "operationId" : "createEnvironment",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/EnvironmentSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiment/logs/{id}" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "Log experiment by id",
        "operationId" : "getLog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Experiment not found"
          }
        }
      }
    },
    "/v1/experiment/ping" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "Ping submarine server",
        "description" : "Return the Pong message for test the connectivity",
        "operationId" : "ping",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiment/logs" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "List experiment's log",
        "operationId" : "listLog",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiment" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "List experiments",
        "operationId" : "listExperiments",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experiment" ],
        "summary" : "Create an experiment",
        "operationId" : "createExperiment",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiment/{name}" : {
      "post" : {
        "tags" : [ "experiment" ],
        "summary" : "use experiment template to create an experiment",
        "operationId" : "SubmitExperimentTemplate",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSubmit"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSubmit"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/experiment/{id}" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "Get the experiment's detailed info by id",
        "operationId" : "getExperiment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Experiment not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "experiment" ],
        "summary" : "Delete the experiment",
        "operationId" : "deleteExperiment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Experiment not found"
          }
        }
      },
      "patch" : {
        "tags" : [ "experiment" ],
        "summary" : "Update the experiment in the submarine server with spec",
        "operationId" : "patchExperiment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Experiment not found"
          }
        }
      }
    },
    "/v1/experiment/artifacts/{id}" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "List artifact paths by id",
        "operationId" : "getArtifactPaths",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Experiment not found"
          }
        }
      }
    },
    "/v1/experiment/tensorboard" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "Get tensorboard's information",
        "operationId" : "getTensorboardInfo",
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Tensorboard not found"
          }
        }
      }
    },
    "/v1/experiment/mlflow" : {
      "get" : {
        "tags" : [ "experiment" ],
        "summary" : "Get mlflow's information",
        "operationId" : "getMLflowInfo",
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "MLflow not found"
          }
        }
      }
    },
    "/v1/template" : {
      "get" : {
        "tags" : [ "experimentTemplates" ],
        "summary" : "List of ExperimentTemplates",
        "operationId" : "listExperimentTemplate",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "experimentTemplate" ],
        "summary" : "Create a experimentTemplate",
        "operationId" : "createExperimentTemplate",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/template/{id}" : {
      "get" : {
        "tags" : [ "experimentTemplate" ],
        "summary" : "Find experimentTemplate by name",
        "operationId" : "getExperimentTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ExperimentTemplate not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "experimentTemplates" ],
        "summary" : "Delete the experimentTemplate",
        "operationId" : "deleteExperimentTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ExperimentTemplate not found"
          }
        }
      },
      "patch" : {
        "tags" : [ "experimentTemplates" ],
        "summary" : "Update the experimentTemplate with job spec",
        "operationId" : "updateExperimentTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ExperimentTemplateSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ExperimentTemplate not found"
          }
        }
      }
    },
    "/v1/model-version/ping" : {
      "get" : {
        "tags" : [ "model-version" ],
        "summary" : "Ping submarine server",
        "description" : "Return the Pong message for test the connectivity",
        "operationId" : "ping_1",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/model-version" : {
      "post" : {
        "tags" : [ "model-version" ],
        "summary" : "Create a model version instance",
        "operationId" : "createModelVersion",
        "parameters" : [ {
          "name" : "baseDir",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelVersionEntity"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelVersionEntity"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "model-version" ],
        "summary" : "Update the model version",
        "operationId" : "updateModelVersion",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ModelVersionEntity"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ModelVersionEntity not found"
          }
        }
      }
    },
    "/v1/model-version/{name}" : {
      "get" : {
        "tags" : [ "model-version" ],
        "summary" : "List model versions",
        "operationId" : "listModelVersions",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/model-version/{name}/{version}" : {
      "get" : {
        "tags" : [ "model-version" ],
        "summary" : "Get detailed info about the model version",
        "operationId" : "getModelVersion",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ModelVersionEntity not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "model-version" ],
        "summary" : "Delete the model version",
        "operationId" : "deleteModelVersion",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "version",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "ModelVersionEntity not found"
          }
        }
      }
    },
    "/v1/model-version/tag" : {
      "post" : {
        "tags" : [ "model-version" ],
        "summary" : "Create a model version tag instance",
        "operationId" : "createModelVersionTag",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "model-version" ],
        "summary" : "Delete a model version tag instance",
        "operationId" : "deleteModelVersionTag",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "version",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notebook/ping" : {
      "get" : {
        "tags" : [ "notebook" ],
        "summary" : "Ping submarine server",
        "description" : "Return the Pong message for test the connectivity",
        "operationId" : "ping_2",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notebook" : {
      "get" : {
        "tags" : [ "notebook" ],
        "summary" : "List notebooks",
        "operationId" : "listNotebooks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "notebook" ],
        "summary" : "Create a notebook instance",
        "operationId" : "createNotebook",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotebookSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/NotebookSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/notebook/{id}" : {
      "get" : {
        "tags" : [ "notebook" ],
        "summary" : "Get detailed info about the notebook",
        "operationId" : "getNotebook",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Notebook not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "notebook" ],
        "summary" : "Delete the notebook",
        "operationId" : "deleteNotebook",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Notebook not found"
          }
        }
      }
    },
    "/v1/registered-model/ping" : {
      "get" : {
        "tags" : [ "registered-model" ],
        "summary" : "Ping submarine server",
        "description" : "Return the Pong message for test the connectivity",
        "operationId" : "ping_3",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registered-model" : {
      "get" : {
        "tags" : [ "registered-model" ],
        "summary" : "List registered models",
        "operationId" : "listRegisteredModels",
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "registered-model" ],
        "summary" : "Create a registered model instance",
        "operationId" : "createRegisteredModel",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisteredModelEntity"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisteredModelEntity"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/registered-model/{name}" : {
      "get" : {
        "tags" : [ "registered-model" ],
        "summary" : "Get detailed info about the registered model",
        "operationId" : "getRegisteredModel",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "RegisteredModelEntity not found"
          }
        }
      },
      "delete" : {
        "tags" : [ "registered-model" ],
        "summary" : "Delete the registered model",
        "operationId" : "deleteRegisteredModel",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "RegisteredModelEntity not found"
          },
          "406" : {
            "description" : "Some version of models are in the production stage"
          },
          "500" : {
            "description" : "Some error happen in server"
          }
        }
      },
      "patch" : {
        "tags" : [ "registered-model" ],
        "summary" : "Update the registered model",
        "operationId" : "updateRegisteredModel",
        "parameters" : [ {
          "name" : "name",
          "in" : "path",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/RegisteredModelEntity"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "RegisteredModelEntity not found"
          }
        }
      }
    },
    "/v1/registered-model/tag" : {
      "post" : {
        "tags" : [ "registered-model" ],
        "summary" : "Create a registered model tag instance",
        "operationId" : "createRegisteredModelTag",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "registered-model" ],
        "summary" : "Delete a registered model tag instance",
        "operationId" : "deleteRegisteredModelTag",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        }, {
          "name" : "tag",
          "in" : "query",
          "schema" : {
            "type" : "string",
            "default" : ""
          }
        } ],
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serve/ping" : {
      "get" : {
        "tags" : [ "serve" ],
        "summary" : "Ping submarine server",
        "description" : "Return the Pong message for test the connectivity",
        "operationId" : "ping_4",
        "responses" : {
          "200" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/v1/serve" : {
      "post" : {
        "tags" : [ "serve" ],
        "summary" : "Create a serve instance",
        "operationId" : "createServe",
        "requestBody" : {
          "content" : {
            "application/yaml" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServeSpec"
              }
            },
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServeSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "serve" ],
        "summary" : "Delete the serve instance.",
        "operationId" : "deleteServe",
        "requestBody" : {
          "content" : {
            "*/*" : {
              "schema" : {
                "$ref" : "#/components/schemas/ServeSpec"
              }
            }
          }
        },
        "responses" : {
          "default" : {
            "description" : "successful operation",
            "content" : {
              "application/json; charset=utf-8" : {
                "schema" : {
                  "$ref" : "#/components/schemas/JsonResponse"
                }
              }
            }
          },
          "404" : {
            "description" : "Serve not found."
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "JsonResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32"
          },
          "success" : {
            "type" : "boolean"
          },
          "result" : {
            "type" : "object"
          },
          "attributes" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "EnvironmentSpec" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "dockerImage" : {
            "type" : "string"
          },
          "kernelSpec" : {
            "$ref" : "#/components/schemas/KernelSpec"
          },
          "description" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          }
        }
      },
      "KernelSpec" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "channels" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "condaDependencies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "pipDependencies" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CodeSpec" : {
        "type" : "object",
        "properties" : {
          "syncMode" : {
            "type" : "string"
          },
          "git" : {
            "$ref" : "#/components/schemas/GitCodeSpec"
          }
        }
      },
      "ExperimentMeta" : {
        "type" : "object",
        "properties" : {
          "experimentId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "framework" : {
            "type" : "string"
          },
          "cmd" : {
            "type" : "string"
          },
          "envVars" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ExperimentSpec" : {
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/ExperimentMeta"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentSpec"
          },
          "spec" : {
            "type" : "object",
            "additionalProperties" : {
              "$ref" : "#/components/schemas/ExperimentTaskSpec"
            }
          },
          "experimentHandlerSpec" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "code" : {
            "$ref" : "#/components/schemas/CodeSpec"
          }
        }
      },
      "ExperimentTaskSpec" : {
        "type" : "object",
        "properties" : {
          "replicas" : {
            "type" : "integer",
            "format" : "int32"
          },
          "resources" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "image" : {
            "type" : "string"
          },
          "cmd" : {
            "type" : "string"
          },
          "envVars" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "gpu" : {
            "type" : "string"
          },
          "cpu" : {
            "type" : "string"
          },
          "memory" : {
            "type" : "string"
          }
        }
      },
      "GitCodeSpec" : {
        "type" : "object",
        "properties" : {
          "url" : {
            "type" : "string"
          },
          "branch" : {
            "type" : "string"
          },
          "username" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "trustCerts" : {
            "type" : "boolean"
          }
        }
      },
      "ExperimentTemplateSubmit" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "params" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "ExperimentTemplateParamSpec" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "required" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "value" : {
            "type" : "string"
          }
        }
      },
      "ExperimentTemplateSpec" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "author" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "parameters" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExperimentTemplateParamSpec"
            }
          },
          "experimentSpec" : {
            "$ref" : "#/components/schemas/ExperimentSpec"
          },
          "experimentTemplateParamSpec" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ExperimentTemplateParamSpec"
            }
          }
        }
      },
      "ModelVersionEntity" : {
        "type" : "object",
        "properties" : {
          "modelVersionId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "version" : {
            "type" : "integer",
            "format" : "int32"
          },
          "id" : {
            "type" : "string"
          },
          "userId" : {
            "type" : "string"
          },
          "experimentId" : {
            "type" : "string"
          },
          "modelType" : {
            "type" : "string"
          },
          "currentStage" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "dataset" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "NotebookMeta" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "namespace" : {
            "type" : "string"
          },
          "ownerId" : {
            "type" : "string"
          },
          "labels" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }
      },
      "NotebookPodSpec" : {
        "type" : "object",
        "properties" : {
          "envVars" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          },
          "resources" : {
            "type" : "string"
          },
          "gpu" : {
            "type" : "string"
          },
          "cpu" : {
            "type" : "string"
          },
          "memory" : {
            "type" : "string"
          }
        }
      },
      "NotebookSpec" : {
        "type" : "object",
        "properties" : {
          "meta" : {
            "$ref" : "#/components/schemas/NotebookMeta"
          },
          "environment" : {
            "$ref" : "#/components/schemas/EnvironmentSpec"
          },
          "spec" : {
            "$ref" : "#/components/schemas/NotebookPodSpec"
          }
        }
      },
      "RegisteredModelEntity" : {
        "type" : "object",
        "properties" : {
          "modelId" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "creationTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "lastUpdatedTime" : {
            "type" : "string",
            "format" : "date-time"
          },
          "description" : {
            "type" : "string"
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "ServeSpec" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int64"
          },
          "modelName" : {
            "type" : "string"
          },
          "modelVersion" : {
            "type" : "integer",
            "format" : "int32"
          },
          "modelId" : {
            "type" : "string"
          },
          "modelType" : {
            "type" : "string"
          },
          "modelURI" : {
            "type" : "string"
          }
        }
      }
    }
  }
}